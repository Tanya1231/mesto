(()=>{"use strict";class e{constructor(e,t){this.config=e,this._form=t,this._sumbitButton=this._form.querySelector(e.sumbitButton),this._inactiveButtonClass=e.inactiveButtonClass}_setCustomError(e){const t=e.validity;if(e.setCustomValidity(""),t.tooShort||t.tooLong){const t=e.value.length,s=e.getAttribute("minlength");e.setCustomValidity(`Минимальное колличество символов ${s}. Длина текста сейчас ${t} символ`)}}_setFieldError(e){document.querySelector(`#${e.id}-error`).textContent=e.validationMessage}_setButtonState(){this._form.checkValidity()?(this._sumbitButton.classList.remove(this._inactiveButtonClass),this._sumbitButton.removeAttribute("disabled")):this._disableButtonState()}_disableButtonState(){this._sumbitButton.classList.add(this._inactiveButtonClass),this._sumbitButton.setAttribute("disabled",!0)}_handleFormSumbit(e){e.preventDefault(),this._disableButtonState()}_handleFormInput(e){const t=e.target;this._setCustomError(t),this._setFieldError(t),this._setButtonState()}enableValidation=()=>{this._form.addEventListener("submit",(e=>this._handleFormSumbit(e))),this._form.addEventListener("input",(e=>this._handleFormInput(e))),this._setButtonState()}}class t{constructor({name:e,link:t,handleCardClick:s},r){this._name=e,this._link=t,this._handleCardClick=s,this._cardSelector=r,this._card=this._getTemplate()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}_removeCard=()=>{this._card.remove(),this._card=null};_likeCard(e){e.target.classList.toggle("element__vector_active")}_setEventListners(){this._card.querySelector(".element__delete").addEventListener("click",this._removeCard),this._card.querySelector(".element__vector").addEventListener("click",this._likeCard),this._card.querySelector(".element__image").addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}generateCard(){return this._image=this._card.querySelector(".element__image"),this._card.querySelector(".element__title").textContent=this._name,this._image.src=this._link,this._image.alt=this._name,this._setEventListners(),this._card}}class s{constructor(e){this._popup=document.querySelector(e),this.close=this.close.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_open"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popup.querySelector(".popup__button-close").addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()}))}}class r extends s{constructor(e,{formSubmit:t}){super(e),this._formSubmit=t,this._form=this._popup.querySelector(".form"),this._submitButton=this._popup.querySelector(".form__button"),this._inputList=this._popup.querySelectorAll(".form__container")}_getInputValues(){const e={};return this._inputList.forEach((t=>e[t.name]=t.value)),e}close(){this._form.reset(),super.close()}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._formSubmit(this._getInputValues()),this.close()}))}}const n=document.querySelector(".form"),i=document.querySelector(".form_popup_add-card"),o=document.querySelector(".form__container_type_name"),a=document.querySelector(".form__container_type_info"),d=document.querySelector(".profile__edit-button"),c=document.querySelector(".profile__addbutton"),h=new class{constructor(e,t){this._baseUrl=e,this._headers=t}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}),then(this._getPesponseData)}getUserInfo(){return fetch(`${this._baseUrl}/user/me`,{headers:this._headers}),then(this._getPesponseData)}patchUserInfo(e){return fetch(`${this._baseUrl}/user/me`,{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.about})}).then(this._getPesponseData)}patchAvatar(e){return fetch(`${this._baseUrl}/user/me/avatar`,{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e.link})}).then(this._getPesponseData)}postNewData(e){return fetch(`${this._baseUrl}/cards`,{headers:this._headers,method:"POST",body:JSON.stringify({name:e.name,link:e.link})}).then(this._getPesponseData)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{headers:this._headers,method:"DELETE"}).then(this._getPesponseData)}putLike(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{headers:this._headers,method:"PUT"}).then(this._getPesponseData)}deleteLike(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{headers:this._headers,method:"DELETE"}).then(this._getPesponseData)}_getPesponseData(e){return e.ok?e.json():Promise.reject(`Ошибка: ${e.status}`)}}({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-47",headers:{authorization:"0162be33-26fc-4582-97e8-0d78f4ad20d1","Content-Type":"application/json"}}),l={form:".form",sumbitButton:".form__button",inactiveButtonClass:"form__button_invalid"},u=new class extends s{constructor(e){super(e),this._picturePopupImage=this._popup.querySelector(".popup__image"),this._popupSubtitle=this._popup.querySelector(".popup__subtitle")}open(e,t){super.open(),this._popupSubtitle.textContent=e,this._picturePopupImage.alt=e,this._picturePopupImage.src=t}}(".popup_open-img");u.setEventListeners();const _=(e,s)=>new t({name:e,link:s,handleCardClick:()=>{u.open(e,s)}},"#card").generateCard();Promise.all([h.getInitialCards(),h.getUserInfo()]).then((e=>{const[t,s]=e;userId=s._id,b.renderItems(t),m.setUserInfo(s)})).catch((e=>{console.log(e)}));const p=new class{constructor(e,t){this._profileName=document.querySelector(e),this._profileInfo=document.querySelector(t)}getUserInfo(){return{name:this._profileName.textContent,about:this._profileInfo.textContent}}setUserInfo(e){this._profileName.textContent=e.name,this._profileInfo.textContent=e.about}}(".profile__title",".profile__subtitle"),m=new r(".popup_type_profile",{formSubmit:e=>{p.setUserInfo(e)}});m.setEventListeners(),d.addEventListener("click",(()=>{const e=p.getUserInfo();o.value=e.name,a.value=e.about,m.open()}));const f=new r(".popup_add_card",{formSubmit:e=>{const t=_(e.name,e.link);b.addItemPrepend(t)}});f.setEventListeners();const b=new class{constructor({items:e,renderer:t},s){this._renderItems=e,this._renderer=t,this._container=document.querySelector(s)}renderItems(){this._renderItems.forEach((e=>{this._renderer(e)}))}addItemAppend(e){this._container.append(e)}addItemPrepend(e){this._container.prepend(e)}}({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:e=>{const t=_(e.name,e.link);b.addItemAppend(t)}},".elements");b.renderItems(),c.addEventListener("click",(()=>{f.open()})),new e(l,i).enableValidation(),new e(l,n).enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,